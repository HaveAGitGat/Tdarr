FROM lsiobase/ubuntu:focal

ENV \
 LIBVA_DRIVERS_PATH="/usr/lib/x86_64-linux-gnu/dri" \
 LD_LIBRARY_PATH="/usr/lib/x86_64-linux-gnu" \
 NVIDIA_DRIVER_CAPABILITIES="compute,video,utility" \
 NVIDIA_VISIBLE_DEVICES="all" \
 HANDBRAKE=1.6.1

ENV WEB_UI_PORT="8265" SERVER_PORT="8266" NODE_PORT="8267" PUID="1000" PGID="1000" UMASK="002" TZ="Etc/UTC" HOME="/home/Tdarr"

COPY docker/root/ /

# handle deps
RUN apt-get update &&  \
        apt-get install -y \
            software-properties-common \
            git \
            trash-cli && \
    mkdir -p \
    /app \
    /logs \
    /temp \
    "${HOME}" && \
    # useradd -u ${PUID} -U -d ${HOME} -s /bin/false Tdarr && \
    # usermod -G users Tdarr && \

    # MkvToolNIX
    wget -O /usr/share/keyrings/gpg-pub-moritzbunkus.gpg https://mkvtoolnix.download/gpg-pub-moritzbunkus.gpg && \
     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/gpg-pub-moritzbunkus.gpg] https://mkvtoolnix.download/ubuntu/ focal main
        deb-src [arch=amd64 signed-by=/usr/share/keyrings/gpg-pub-moritzbunkus.gpg] https://mkvtoolnix.download/ubuntu/ focal main" > "/etc/apt/sources.list.d/mkvtoolnix.download.list" && \

    apt-get update && \
    apt-get install -y curl unzip mkvtoolnix && \
    #cc-extractor
    apt-get install -y \
        cargo \
        libglew-dev \
        libglfw3-dev \
        cmake \
        gcc \
        libcurl4-gnutls-dev \
        tesseract-ocr \
        libtesseract-dev \
        libleptonica-dev \
        clang \
        libclang-dev && \
        git clone https://github.com/CCExtractor/ccextractor.git && \
        cd ccextractor/linux && \ 
        ./build -without-rust && \
        mv ./ccextractor /usr/bin/ccextractor && \
        
        cd / && rm -rf /ccextractor && \
    if uname -m | grep -q x86; then \

        # b
        apt-get install -y gpg-agent wget && \
        wget -qO - https://repositories.intel.com/graphics/intel-graphics.key | \
        gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg && \
        echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu focal-legacy main' | \
        tee  /etc/apt/sources.list.d/intel.gpu.focal.list && \

        # FFmpeg
        apt install -y wget && \
        ffmpegversion=$(curl --silent https://api.github.com/repos/jellyfin/jellyfin-ffmpeg/releases/latest | grep -oP '"tag_name":\s*"v\K[^"]+' | sort -h | tail -n1) && \
        wget https://github.com/jellyfin/jellyfin-ffmpeg/releases/download/v$ffmpegversion/jellyfin-ffmpeg6_$ffmpegversion-focal_amd64.deb && \
        apt install -y \
        ./jellyfin-ffmpeg6_$ffmpegversion-focal_amd64.deb && \
        rm -rf ./jellyfin-ffmpeg6_$ffmpegversion-focal_amd64.deb && \
        ln -s /usr/lib/jellyfin-ffmpeg/ffmpeg /usr/local/bin/ffmpeg && \
        ln -s /usr/lib/jellyfin-ffmpeg/ffmpeg /usr/local/bin/tdarr-ffmpeg && \
        # apt-get install -y ffmpeg && \
     
        apt-get update && \

        # b
        apt-get install -y \
            intel-opencl-icd \
            intel-level-zero-gpu level-zero \
            intel-media-va-driver-non-free libmfx1 libmfxgen1 libvpl2 && \

        apt-get install -y --no-install-recommends \
            intel-media-va-driver-non-free \
            vainfo \
            mesa-va-drivers && \

        # HandBrake deps
        apt-get install -y \
            autoconf \
            automake \
            autopoint \
            appstream \
            build-essential \
            cmake \
            git \
            libass-dev \
            libbz2-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libfribidi-dev \
            libharfbuzz-dev \
            libjansson-dev \
            liblzma-dev \
            libmp3lame-dev \
            libnuma-dev \
            libogg-dev \
            libopus-dev \
            libsamplerate-dev \
            libspeex-dev \
            libtheora-dev \
            libtool \
            libtool-bin \
            libturbojpeg0-dev \
            libvorbis-dev \
            libx264-dev \
            libxml2-dev \
            libvpx-dev \
            m4 \
            make \
            meson \
            nasm \
            ninja-build \
            patch \
            pkg-config \
            python \
            tar \
            zlib1g-dev \
            libva-dev \
            libdrm-dev \
            libmfx-dev \
            libmfx1 && \

        rm -rdf /tmp/handbrake && \
        mkdir -p /tmp/handbrake && \
        git clone \
            --branch ${HANDBRAKE} \
            --depth 1 https://github.com/HandBrake/HandBrake.git \
            /tmp/handbrake && \
        cd /tmp/handbrake && \
        ./configure \
            --enable-nvenc \
            --enable-qsv \
            --enable-x265 \
            --disable-gtk \
            --launch-jobs=14 \
            --launch \
            --force && \
        make --directory=build install && \
        cp /tmp/handbrake/build/HandBrakeCLI /usr/local/bin/HandBrakeCLI && \
        rm -rdf /tmp/handbrake/ ; \
    fi && \
    if uname -m | grep -q aarch64; then \
        apt-get install -y handbrake-cli ffmpeg && \
        ln -s /usr/bin/ffmpeg /usr/local/bin/tdarr-ffmpeg ; \
    fi && \
    if uname -m | grep -q armv7l; then \
        apt-get install -y handbrake-cli ffmpeg && \
        ln -s /usr/bin/ffmpeg /usr/local/bin/tdarr-ffmpeg ; \
    fi && \

    # Clear cached apt files
    apt-get clean
